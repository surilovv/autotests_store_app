# name: CI/CD

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout store-app-testing
#       uses: actions/checkout@v2 #клонирует весь репозиторий без сабмодуля

#     - name: Add store-app as submodule
#       run: make run  # добавляет сабмодуль - кодовая база приложения

#     - name: Build and run Docker Compose
#       run: |
#         docker-compose up -d
#         docker-compose logs -f store-app-testing > logs.txt &
#         while true; do
#           if grep -q "autotests_store_app_store-app-testing_1 exited with code 0" logs.txt; then
#             docker cp $(docker-compose ps -q store-app-testing):/app/pyreport.html .
#             break
#           fi
#           sleep 10
#         done

#     - name: Install rsync 📚
#       run: |
#         sudo apt-get install rsync
        
#     - name: Move Pyreport to Public Directory
#       run: |
#         mkdir public
#         mv pyreport.html public/

#     - name: Deploy to Github Pages
#       uses: JamesIves/github-pages-deploy-action@v4
#       with:
#         token: ${{ secrets.PIPELINES_TOKEN }}
#         branch: gh-pages
#         folder: public
#         clean: true

name: Tests

on:
  push:
    branches:
      - main
      - feature/*
      - bugfix/*

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Checkout (copy) gh-pages repository to GitHub runner
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: ./.github/gh-pages

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Install Allure
        run: |
          sudo apt-get update && \
          sudo apt-get install -y openjdk-11-jre curl tar && \
          curl -o allure-2.13.8.tgz -Ls https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.13.8/allure-commandline-2.13.8.tgz && \
          tar -zxvf allure-2.13.8.tgz -C /opt/ && \
          sudo ln -s /opt/allure-2.13.8/bin/allure /usr/bin/allure && \
          rm allure-2.13.8.tgz

      - name: Run tests
        run: |
          pytest -k "test_1" --alluredir=allure-results

      - name: Generate Allure report
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          token: ${{ secrets.PIPELINES_TOKEN }}
          branch: gh-pages
          folder: allure-report
          clean: true
